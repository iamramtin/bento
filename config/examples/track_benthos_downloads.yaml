pipeline:
  threads: 20
  processors:
    - bloblang: 'root = {}'
    - workflow:
        meta_path: results
        order: [ [ dockerhub, github, homebrew ] ]

resources:
  processors:
    dockerhub:
      branch:
        request_map: 'root = ""'
        processors:
          - try:
            # Grab docker dl count
            - http:
                url: https://hub.docker.com/v2/repositories/jeffail/benthos/
                verb: GET
                retries: 0
            - bloblang: |
                root.source = "docker"
                root.dist = "docker"
                root.download_count = this.pull_count
            - resource: metric.gauge

    github:
      branch:
        request_map: 'root = ""'
        processors:
          - try:
            # Grab github latest release dl count
            - http:
                url: https://api.github.com/repos/Jeffail/benthos/releases/latest
                verb: GET
                retries: 0
            - bloblang: |
                root = this.assets.map_each(match {
                  "source":"github",
                  "dist": this.name.re_replace("^benthos-?((lambda_)|_)[0-9\\.]+_([^\\.]+).*", "$2$3"),
                  "download_count": this.download_count
                } {
                  this.dist != "checksums" => this
                  _ => deleted()
                })
            - unarchive:
                format: json_array
            - resource: metric.gauge
            - bloblang: 'root = if batch_index() != 0 { deleted() }'

    homebrew:
      branch:
        request_map: 'root = ""'
        processors:
          - try:
            - http:
                url: https://formulae.brew.sh/api/formula/benthos.json
                verb: GET
                retries: 0
            - bloblang: |
                root.source = "homebrew"
                root.dist = "brew"
                root.download_count = this.analytics.install.30d.benthos
            - resource: metric.gauge

    metric.gauge:
      metric:
        type: gauge
        name: BenthosDownloadGauge
        labels:
          dist: ${! json("dist") }
          source: ${! json("source") }
        value: ${! json("download_count") }

metrics:
  aws_cloudwatch:
    namespace: BenthosAnalyticsStaging
    flush_period: 500ms
    region: eu-west-1
    path_mapping: |
      # Only emit our custom metric, and no internal Benthos metrics.
      root = if ![
        "BenthosDownloadGauge"
      ].contains(this) { deleted() }
