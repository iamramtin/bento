pipeline:
  processors:
    - text:
        operator: set
        value: '${!json().foo.(bar | fallback | fallback_two).baz}'

tests:
  - name: None of the targets
    target_processors: /pipeline/processors
    input_batch:
      - content: '{"none":"of the target values"}'
      - content: '{"foo":"And no more"}'
      - content: '{"foo":{"bar":"and no more"}}'
      - content: '{"foo":{"fallback":"and no more"}}'
    output_batches:
      - - content_equals: 'null'
        - content_equals: 'null'
        - content_equals: 'null'
        - content_equals: 'null'

  - name: From bar
    target_processors: /pipeline/processors
    input_batch:
      - content: '{"foo":{"bar":{"baz":"from_bar"}}}'
      - content: '{"foo":{"bar":{"baz":"from_bar"},"fallback":{"baz":"this also exists"}}}'
      - content: '{"foo":{"bar":{"baz":"from_bar"},"fallback_two":{"baz":"this also exists"}}}'
      - content: '{"foo":{"bar":{"baz":"from_bar"},"fallback":{"baz":"this also exists"},"fallback_two":{"baz":"and also this"}}}'
    output_batches:
      - - content_equals: 'from_bar'
        - content_equals: 'from_bar'
        - content_equals: 'from_bar'
        - content_equals: 'from_bar'

  - name: From fallback
    target_processors: /pipeline/processors
    input_batch:
      - content: '{"foo":{"fallback":{"baz":"from_fallback"}}}'
      - content: '{"foo":{"fallback":{"baz":"from_fallback"},"fallback_two":{"baz":"from_fallback_two"}}}'
    output_batches:
      - - content_equals: 'from_fallback'
        - content_equals: 'from_fallback'

  - name: From fallback two
    target_processors: /pipeline/processors
    input_batch:
      - content: '{"foo":{"fallback_two":{"baz":"from_fallback_two"}}}'
    output_batches:
      - - content_equals: 'from_fallback_two'
